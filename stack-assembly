
stack:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   %ebx
    1005:	83 ec 08             	sub    $0x8,%esp
    1008:	e8 03 01 00 00       	call   1110 <__x86.get_pc_thunk.bx>
    100d:	81 c3 c3 2f 00 00    	add    $0x2fc3,%ebx
    1013:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
    1019:	85 c0                	test   %eax,%eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   *%eax
    101f:	83 c4 08             	add    $0x8,%esp
    1022:	5b                   	pop    %ebx
    1023:	c3                   	ret    

Disassembly of section .plt:

00001030 <.plt>:
    1030:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1036:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    103c:	0f 1f 40 00          	nopl   0x0(%eax)
    1040:	f3 0f 1e fb          	endbr32 
    1044:	68 00 00 00 00       	push   $0x0
    1049:	e9 e2 ff ff ff       	jmp    1030 <.plt>
    104e:	66 90                	xchg   %ax,%ax
    1050:	f3 0f 1e fb          	endbr32 
    1054:	68 08 00 00 00       	push   $0x8
    1059:	e9 d2 ff ff ff       	jmp    1030 <.plt>
    105e:	66 90                	xchg   %ax,%ax
    1060:	f3 0f 1e fb          	endbr32 
    1064:	68 10 00 00 00       	push   $0x10
    1069:	e9 c2 ff ff ff       	jmp    1030 <.plt>
    106e:	66 90                	xchg   %ax,%ax
    1070:	f3 0f 1e fb          	endbr32 
    1074:	68 18 00 00 00       	push   $0x18
    1079:	e9 b2 ff ff ff       	jmp    1030 <.plt>
    107e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

00001080 <__cxa_finalize@plt>:
    1080:	f3 0f 1e fb          	endbr32 
    1084:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
    108a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

Disassembly of section .plt.sec:

00001090 <printf@plt>:
    1090:	f3 0f 1e fb          	endbr32 
    1094:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    109a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

000010a0 <signal@plt>:
    10a0:	f3 0f 1e fb          	endbr32 
    10a4:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    10aa:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

000010b0 <puts@plt>:
    10b0:	f3 0f 1e fb          	endbr32 
    10b4:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    10ba:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

000010c0 <__libc_start_main@plt>:
    10c0:	f3 0f 1e fb          	endbr32 
    10c4:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    10ca:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

Disassembly of section .text:

000010d0 <_start>:
    10d0:	f3 0f 1e fb          	endbr32 
    10d4:	31 ed                	xor    %ebp,%ebp
    10d6:	5e                   	pop    %esi
    10d7:	89 e1                	mov    %esp,%ecx
    10d9:	83 e4 f0             	and    $0xfffffff0,%esp
    10dc:	50                   	push   %eax
    10dd:	54                   	push   %esp
    10de:	52                   	push   %edx
    10df:	e8 22 00 00 00       	call   1106 <_start+0x36>
    10e4:	81 c3 ec 2e 00 00    	add    $0x2eec,%ebx
    10ea:	8d 83 70 d3 ff ff    	lea    -0x2c90(%ebx),%eax
    10f0:	50                   	push   %eax
    10f1:	8d 83 00 d3 ff ff    	lea    -0x2d00(%ebx),%eax
    10f7:	50                   	push   %eax
    10f8:	51                   	push   %ecx
    10f9:	56                   	push   %esi
    10fa:	ff b3 28 00 00 00    	pushl  0x28(%ebx)
    1100:	e8 bb ff ff ff       	call   10c0 <__libc_start_main@plt>
    1105:	f4                   	hlt    
    1106:	8b 1c 24             	mov    (%esp),%ebx
    1109:	c3                   	ret    
    110a:	66 90                	xchg   %ax,%ax
    110c:	66 90                	xchg   %ax,%ax
    110e:	66 90                	xchg   %ax,%ax

00001110 <__x86.get_pc_thunk.bx>:
    1110:	8b 1c 24             	mov    (%esp),%ebx
    1113:	c3                   	ret    
    1114:	66 90                	xchg   %ax,%ax
    1116:	66 90                	xchg   %ax,%ax
    1118:	66 90                	xchg   %ax,%ax
    111a:	66 90                	xchg   %ax,%ax
    111c:	66 90                	xchg   %ax,%ax
    111e:	66 90                	xchg   %ax,%ax

00001120 <deregister_tm_clones>:
    1120:	e8 e4 00 00 00       	call   1209 <__x86.get_pc_thunk.dx>
    1125:	81 c2 ab 2e 00 00    	add    $0x2eab,%edx
    112b:	8d 8a 38 00 00 00    	lea    0x38(%edx),%ecx
    1131:	8d 82 38 00 00 00    	lea    0x38(%edx),%eax
    1137:	39 c8                	cmp    %ecx,%eax
    1139:	74 1d                	je     1158 <deregister_tm_clones+0x38>
    113b:	8b 82 1c 00 00 00    	mov    0x1c(%edx),%eax
    1141:	85 c0                	test   %eax,%eax
    1143:	74 13                	je     1158 <deregister_tm_clones+0x38>
    1145:	55                   	push   %ebp
    1146:	89 e5                	mov    %esp,%ebp
    1148:	83 ec 14             	sub    $0x14,%esp
    114b:	51                   	push   %ecx
    114c:	ff d0                	call   *%eax
    114e:	83 c4 10             	add    $0x10,%esp
    1151:	c9                   	leave  
    1152:	c3                   	ret    
    1153:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1157:	90                   	nop
    1158:	c3                   	ret    
    1159:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001160 <register_tm_clones>:
    1160:	e8 a4 00 00 00       	call   1209 <__x86.get_pc_thunk.dx>
    1165:	81 c2 6b 2e 00 00    	add    $0x2e6b,%edx
    116b:	55                   	push   %ebp
    116c:	89 e5                	mov    %esp,%ebp
    116e:	53                   	push   %ebx
    116f:	8d 8a 38 00 00 00    	lea    0x38(%edx),%ecx
    1175:	8d 82 38 00 00 00    	lea    0x38(%edx),%eax
    117b:	83 ec 04             	sub    $0x4,%esp
    117e:	29 c8                	sub    %ecx,%eax
    1180:	89 c3                	mov    %eax,%ebx
    1182:	c1 e8 1f             	shr    $0x1f,%eax
    1185:	c1 fb 02             	sar    $0x2,%ebx
    1188:	01 d8                	add    %ebx,%eax
    118a:	d1 f8                	sar    %eax
    118c:	74 14                	je     11a2 <register_tm_clones+0x42>
    118e:	8b 92 2c 00 00 00    	mov    0x2c(%edx),%edx
    1194:	85 d2                	test   %edx,%edx
    1196:	74 0a                	je     11a2 <register_tm_clones+0x42>
    1198:	83 ec 08             	sub    $0x8,%esp
    119b:	50                   	push   %eax
    119c:	51                   	push   %ecx
    119d:	ff d2                	call   *%edx
    119f:	83 c4 10             	add    $0x10,%esp
    11a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11a5:	c9                   	leave  
    11a6:	c3                   	ret    
    11a7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    11ae:	66 90                	xchg   %ax,%ax

000011b0 <__do_global_dtors_aux>:
    11b0:	f3 0f 1e fb          	endbr32 
    11b4:	55                   	push   %ebp
    11b5:	89 e5                	mov    %esp,%ebp
    11b7:	53                   	push   %ebx
    11b8:	e8 53 ff ff ff       	call   1110 <__x86.get_pc_thunk.bx>
    11bd:	81 c3 13 2e 00 00    	add    $0x2e13,%ebx
    11c3:	83 ec 04             	sub    $0x4,%esp
    11c6:	80 bb 38 00 00 00 00 	cmpb   $0x0,0x38(%ebx)
    11cd:	75 27                	jne    11f6 <__do_global_dtors_aux+0x46>
    11cf:	8b 83 20 00 00 00    	mov    0x20(%ebx),%eax
    11d5:	85 c0                	test   %eax,%eax
    11d7:	74 11                	je     11ea <__do_global_dtors_aux+0x3a>
    11d9:	83 ec 0c             	sub    $0xc,%esp
    11dc:	ff b3 34 00 00 00    	pushl  0x34(%ebx)
    11e2:	e8 99 fe ff ff       	call   1080 <__cxa_finalize@plt>
    11e7:	83 c4 10             	add    $0x10,%esp
    11ea:	e8 31 ff ff ff       	call   1120 <deregister_tm_clones>
    11ef:	c6 83 38 00 00 00 01 	movb   $0x1,0x38(%ebx)
    11f6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11f9:	c9                   	leave  
    11fa:	c3                   	ret    
    11fb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    11ff:	90                   	nop

00001200 <frame_dummy>:
    1200:	f3 0f 1e fb          	endbr32 
    1204:	e9 57 ff ff ff       	jmp    1160 <register_tm_clones>

00001209 <__x86.get_pc_thunk.dx>:
    1209:	8b 14 24             	mov    (%esp),%edx
    120c:	c3                   	ret    

0000120d <signal_handle>:
    120d:	f3 0f 1e fb          	endbr32 
    1211:	55                   	push   %ebp
    1212:	89 e5                	mov    %esp,%ebp
    1214:	53                   	push   %ebx
    1215:	83 ec 14             	sub    $0x14,%esp
    1218:	e8 a9 00 00 00       	call   12c6 <__x86.get_pc_thunk.ax>
    121d:	05 b3 2d 00 00       	add    $0x2db3,%eax
    1222:	83 ec 0c             	sub    $0xc,%esp
    1225:	8d 90 38 e0 ff ff    	lea    -0x1fc8(%eax),%edx
    122b:	52                   	push   %edx
    122c:	89 c3                	mov    %eax,%ebx
    122e:	e8 7d fe ff ff       	call   10b0 <puts@plt>
    1233:	83 c4 10             	add    $0x10,%esp
    1236:	8d 45 08             	lea    0x8(%ebp),%eax
    1239:	89 45 f0             	mov    %eax,-0x10(%ebp)
    123c:	8b 45 f0             	mov    -0x10(%ebp),%eax
    123f:	83 c0 10             	add    $0x10,%eax
    1242:	89 45 f4             	mov    %eax,-0xc(%ebp)
    1245:	8b 45 f4             	mov    -0xc(%ebp),%eax
    1248:	8b 00                	mov    (%eax),%eax
    124a:	8d 50 02             	lea    0x2(%eax),%edx
    124d:	8b 45 f4             	mov    -0xc(%ebp),%eax
    1250:	89 10                	mov    %edx,(%eax)
    1252:	90                   	nop
    1253:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1256:	c9                   	leave  
    1257:	c3                   	ret    

00001258 <main>:
    1258:	f3 0f 1e fb          	endbr32 
    125c:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    1260:	83 e4 f0             	and    $0xfffffff0,%esp
    1263:	ff 71 fc             	pushl  -0x4(%ecx)
    1266:	55                   	push   %ebp
    1267:	89 e5                	mov    %esp,%ebp
    1269:	53                   	push   %ebx
    126a:	51                   	push   %ecx
    126b:	83 ec 10             	sub    $0x10,%esp
    126e:	e8 9d fe ff ff       	call   1110 <__x86.get_pc_thunk.bx>
    1273:	81 c3 5d 2d 00 00    	add    $0x2d5d,%ebx
    1279:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    1280:	83 ec 08             	sub    $0x8,%esp
    1283:	8d 83 3d d2 ff ff    	lea    -0x2dc3(%ebx),%eax
    1289:	50                   	push   %eax
    128a:	6a 0b                	push   $0xb
    128c:	e8 0f fe ff ff       	call   10a0 <signal@plt>
    1291:	83 c4 10             	add    $0x10,%esp
    1294:	b8 00 00 00 00       	mov    $0x0,%eax
    1299:	8b 00                	mov    (%eax),%eax
    129b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    129e:	83 45 f4 1e          	addl   $0x1e,-0xc(%ebp)
    12a2:	83 ec 08             	sub    $0x8,%esp
    12a5:	ff 75 f4             	pushl  -0xc(%ebp)
    12a8:	8d 83 58 e0 ff ff    	lea    -0x1fa8(%ebx),%eax
    12ae:	50                   	push   %eax
    12af:	e8 dc fd ff ff       	call   1090 <printf@plt>
    12b4:	83 c4 10             	add    $0x10,%esp
    12b7:	b8 00 00 00 00       	mov    $0x0,%eax
    12bc:	8d 65 f8             	lea    -0x8(%ebp),%esp
    12bf:	59                   	pop    %ecx
    12c0:	5b                   	pop    %ebx
    12c1:	5d                   	pop    %ebp
    12c2:	8d 61 fc             	lea    -0x4(%ecx),%esp
    12c5:	c3                   	ret    

000012c6 <__x86.get_pc_thunk.ax>:
    12c6:	8b 04 24             	mov    (%esp),%eax
    12c9:	c3                   	ret    
    12ca:	66 90                	xchg   %ax,%ax
    12cc:	66 90                	xchg   %ax,%ax
    12ce:	66 90                	xchg   %ax,%ax

000012d0 <__libc_csu_init>:
    12d0:	f3 0f 1e fb          	endbr32 
    12d4:	55                   	push   %ebp
    12d5:	e8 6b 00 00 00       	call   1345 <__x86.get_pc_thunk.bp>
    12da:	81 c5 f6 2c 00 00    	add    $0x2cf6,%ebp
    12e0:	57                   	push   %edi
    12e1:	56                   	push   %esi
    12e2:	53                   	push   %ebx
    12e3:	83 ec 0c             	sub    $0xc,%esp
    12e6:	89 eb                	mov    %ebp,%ebx
    12e8:	8b 7c 24 28          	mov    0x28(%esp),%edi
    12ec:	e8 0f fd ff ff       	call   1000 <_init>
    12f1:	8d 9d 04 ff ff ff    	lea    -0xfc(%ebp),%ebx
    12f7:	8d 85 00 ff ff ff    	lea    -0x100(%ebp),%eax
    12fd:	29 c3                	sub    %eax,%ebx
    12ff:	c1 fb 02             	sar    $0x2,%ebx
    1302:	74 29                	je     132d <__libc_csu_init+0x5d>
    1304:	31 f6                	xor    %esi,%esi
    1306:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    130d:	8d 76 00             	lea    0x0(%esi),%esi
    1310:	83 ec 04             	sub    $0x4,%esp
    1313:	57                   	push   %edi
    1314:	ff 74 24 2c          	pushl  0x2c(%esp)
    1318:	ff 74 24 2c          	pushl  0x2c(%esp)
    131c:	ff 94 b5 00 ff ff ff 	call   *-0x100(%ebp,%esi,4)
    1323:	83 c6 01             	add    $0x1,%esi
    1326:	83 c4 10             	add    $0x10,%esp
    1329:	39 f3                	cmp    %esi,%ebx
    132b:	75 e3                	jne    1310 <__libc_csu_init+0x40>
    132d:	83 c4 0c             	add    $0xc,%esp
    1330:	5b                   	pop    %ebx
    1331:	5e                   	pop    %esi
    1332:	5f                   	pop    %edi
    1333:	5d                   	pop    %ebp
    1334:	c3                   	ret    
    1335:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    133c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001340 <__libc_csu_fini>:
    1340:	f3 0f 1e fb          	endbr32 
    1344:	c3                   	ret    

00001345 <__x86.get_pc_thunk.bp>:
    1345:	8b 2c 24             	mov    (%esp),%ebp
    1348:	c3                   	ret    

Disassembly of section .fini:

0000134c <_fini>:
    134c:	f3 0f 1e fb          	endbr32 
    1350:	53                   	push   %ebx
    1351:	83 ec 08             	sub    $0x8,%esp
    1354:	e8 b7 fd ff ff       	call   1110 <__x86.get_pc_thunk.bx>
    1359:	81 c3 77 2c 00 00    	add    $0x2c77,%ebx
    135f:	83 c4 08             	add    $0x8,%esp
    1362:	5b                   	pop    %ebx
    1363:	c3                   	ret    
